// Complete Zork I-Level Parser Test
// Demonstrates full integration of sophisticated parser with Grue compiler

world {
    room library {
        name: "Old Library"
        description: "A dusty old library with tall shelves reaching to the ceiling. Sunlight streams through a small window, illuminating floating motes of dust."
        
        object small_mailbox {
            names: ["small mailbox", "mailbox", "small box", "metal box", "box"]
            adjectives: ["small", "metal", "rusty"]
            openable: true
            container: true
            capacity: 3
            description: "A small metal mailbox, slightly rusty around the edges."
            
            object leaflet {
                names: ["leaflet", "small leaflet", "advertising leaflet", "white leaflet"]
                adjectives: ["small", "white", "advertising", "crumpled"]
                takeable: true
                readable: true
                description: "A small white leaflet advertising Frobozz Magic Equipment."
            }
        }
        
        object brass_lamp {
            names: ["brass lamp", "lamp", "small lamp", "oil lamp"]
            adjectives: ["brass", "small", "old", "tarnished"]
            takeable: true
            light_source: true
            portable: true
            description: "A small brass oil lamp, tarnished with age but still functional."
        }
        
        object jeweled_egg {
            names: ["jewel-encrusted egg", "egg", "large egg", "emerald egg", "treasure"]
            adjectives: ["jewel-encrusted", "large", "emerald", "precious", "valuable"]
            takeable: true
            treasure: true
            value: 14
            description: "A large egg completely encrusted with emeralds and other precious stones."
        }
        
        object trophy_case {
            names: ["trophy case", "case", "glass case", "display case", "cabinet"]
            adjectives: ["glass", "large", "display", "transparent", "empty"]
            openable: true
            container: true
            transparent: true
            capacity: 10
            description: "A large glass trophy case, currently empty but waiting for treasures."
        }
        
        object red_book {
            names: ["red book", "book", "leather book", "tome"]
            adjectives: ["red", "leather", "old", "thick"]
            takeable: true
            readable: true
            description: "A thick red leather book with arcane symbols on the cover."
        }
        
        object wooden_table {
            names: ["wooden table", "table", "oak table", "desk"]
            adjectives: ["wooden", "oak", "large", "heavy"]
            supporter: true
            capacity: 5
            description: "A large oak table with a polished surface."
        }
    }
}

// Advanced Grammar Patterns for Zork I-Level Commands
grammar {
    // Basic object manipulation
    verb "take" {
        noun => take_object($noun),
        "all" => take_all(),
        multi_word_noun => take_object($1)
    }
    
    verb "get" {
        noun => take_object($noun),
        multi_word_noun "from" multi_word_noun => get_from_container($1, $3),
        "everything" => take_all(),
        "all" "except" noun => take_all_except($3)
    }
    
    verb "drop" {
        noun => drop_object($noun),
        "all" => drop_all(),
        multiple_objects => drop_multiple($1)
    }
    
    // Container operations  
    verb "put" {
        direct_object preposition indirect_object => put_object($1, $2, $3),
        noun "in" noun => put_in_container($1, $3),
        noun "on" noun => put_on_supporter($1, $3)
    }
    
    verb "place" {
        direct_object preposition indirect_object => put_object($1, $2, $3)
    }
    
    // Examination with adjectives
    verb "examine" {
        noun => examine_object($noun),
        adjective + noun => examine_with_adjective($1, $2),
        multi_word_noun => examine_object($1),
        optional_adjective + noun => examine_detailed($1, $2)
    }
    
    verb "look" {
        default => look_around(),
        "at" + noun => examine_object($2),
        "at" + adjective + noun => examine_with_adjective($2, $3),
        "at" + multi_word_noun => examine_object($2)
    }
    
    // Opening/closing with sophistication
    verb "open" {
        noun => open_object($noun),
        multi_word_noun => open_object($1),
        noun "with" noun => open_with_key($1, $3),
        "all" => open_all()
    }
    
    verb "close" {
        noun => close_object($noun),
        multi_word_noun => close_object($1)
    }
    
    // Reading
    verb "read" {
        noun => read_object($noun),
        adjective + noun => read_object_with_adjective($1, $2)
    }
    
    // Multiple object support
    verb "inventory" {
        default => show_inventory()
    }
}

// Sophisticated command handlers
function take_object(obj) {
    if (!obj.takeable) {
        print("You can't take the " + obj + ".")
        return
    }
    print("Taken.")
    move(obj, player)
}

function take_all() {
    print("Taking everything visible...")
    // Implementation would iterate through visible objects
}

function take_all_except(exception) {
    print("Taking everything except the " + exception + "...")
}

function get_from_container(obj, container) {
    print("Getting " + obj + " from " + container + ".")
    move(obj, player)
}

function drop_object(obj) {
    print("Dropped.")
    move(obj, player.location)
}

function drop_all() {
    print("Dropping everything you're carrying...")
}

function drop_multiple(objects) {
    print("Dropping multiple objects...")
}

function put_object(obj, preposition, target) {
    if (preposition == "in") {
        put_in_container(obj, target)
    } else if (preposition == "on") {
        put_on_supporter(obj, target)
    }
}

function put_in_container(obj, container) {
    if (!container.container) {
        print("The " + container + " is not a container.")
        return
    }
    if (!container.open) {
        print("The " + container + " is closed.")
        return
    }
    print("Done.")
    move(obj, container)
}

function put_on_supporter(obj, supporter) {
    if (!supporter.supporter) {
        print("You can't put things on the " + supporter + ".")
        return
    }
    print("Done.")
    move(obj, supporter)
}

function examine_object(obj) {
    print(obj.description ? obj.description : "You see nothing special about the " + obj + ".")
}

function examine_with_adjective(adj, obj) {
    print("Looking at the " + adj + " " + obj + "...")
    examine_object(obj)
}

function examine_detailed(adj, obj) {
    if (adj) {
        examine_with_adjective(adj, obj)
    } else {
        examine_object(obj)
    }
}

function look_around() {
    print(player.location.description)
    print("You can see:")
    // List visible objects
}

function open_object(obj) {
    if (!obj.openable) {
        print("You can't open the " + obj + ".")
        return
    }
    if (obj.open) {
        print("The " + obj + " is already open.")
        return
    }
    print("Opened.")
    obj.open = true
}

function open_with_key(obj, key) {
    print("Opening " + obj + " with " + key + "...")
    open_object(obj)
}

function open_all() {
    print("Opening everything that can be opened...")
}

function close_object(obj) {
    if (!obj.openable) {
        print("You can't close the " + obj + ".")
        return
    }
    if (!obj.open) {
        print("The " + obj + " is already closed.")
        return
    }
    print("Closed.")
    obj.open = false
}

function read_object(obj) {
    if (!obj.readable) {
        print("You can't read the " + obj + ".")
        return
    }
    print("The " + obj + " reads: \"Welcome to the wonderful world of text adventures!\"")
}

function read_object_with_adjective(adj, obj) {
    print("Reading the " + adj + " " + obj + "...")
    read_object(obj)
}

function show_inventory() {
    print("You are carrying:")
    print("  a brass lamp")
    print("  a small leaflet")
}

init {
    player.location = library
    
    print("=== ZORK I-LEVEL PARSER TEST ===")
    print("")
    print("Welcome to the Old Library!")
    print("This test demonstrates complete Zork I-level parsing capabilities:")
    print("")
    print("BASIC COMMANDS:")
    print("- take brass lamp")
    print("- get small leaflet")
    print("- drop all")
    print("")
    print("MULTI-WORD OBJECTS:")
    print("- examine jewel-encrusted egg")
    print("- take small mailbox")
    print("- look at trophy case")
    print("")
    print("PREPOSITIONS & CONTAINERS:")
    print("- put brass lamp in trophy case")
    print("- get leaflet from small mailbox")
    print("- place red book on wooden table")
    print("")
    print("ADJECTIVES & MODIFIERS:")
    print("- examine small brass lamp")
    print("- read old red book")
    print("- open rusty mailbox")
    print("")
    print("MULTIPLE OBJECTS:")
    print("- take all")
    print("- drop everything")
    print("- get all except lamp")
    print("")
    print("COMPLEX COMBINATIONS:")
    print("- put jewel-encrusted egg in large trophy case")
    print("- examine the small white advertising leaflet")
    print("- open small metal mailbox with brass lamp")
    print("")
    print("The parser now supports the full complexity of Zork I commands!")
    print("")
}