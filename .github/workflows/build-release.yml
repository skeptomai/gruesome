name: Build Release Binaries

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos:
    name: Build macOS binaries
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-darwin, x86_64-apple-darwin
    
    - name: Build for aarch64-apple-darwin
      run: |
        cargo build --release --target aarch64-apple-darwin --bin gruesome
        cargo build --release --target aarch64-apple-darwin --bin grue-compiler
        cargo build --release --target aarch64-apple-darwin --bin gruedasm-txd
        mkdir -p artifacts
        cp target/aarch64-apple-darwin/release/gruesome artifacts/gruesome-aarch64-apple-darwin
        cp target/aarch64-apple-darwin/release/grue-compiler artifacts/grue-compiler-aarch64-apple-darwin
        cp target/aarch64-apple-darwin/release/gruedasm-txd artifacts/gruedasm-txd-aarch64-apple-darwin
    
    - name: Build for x86_64-apple-darwin
      run: |
        cargo build --release --target x86_64-apple-darwin --bin gruesome
        cargo build --release --target x86_64-apple-darwin --bin grue-compiler
        cargo build --release --target x86_64-apple-darwin --bin gruedasm-txd
        cp target/x86_64-apple-darwin/release/gruesome artifacts/gruesome-x86_64-apple-darwin
        cp target/x86_64-apple-darwin/release/grue-compiler artifacts/grue-compiler-x86_64-apple-darwin
        cp target/x86_64-apple-darwin/release/gruedasm-txd artifacts/gruedasm-txd-x86_64-apple-darwin
    
    - name: Create universal binary
      run: |
        lipo -create \
          artifacts/gruesome-aarch64-apple-darwin \
          artifacts/gruesome-x86_64-apple-darwin \
          -output artifacts/gruesome-universal-apple-darwin
        
        lipo -create \
          artifacts/grue-compiler-aarch64-apple-darwin \
          artifacts/grue-compiler-x86_64-apple-darwin \
          -output artifacts/grue-compiler-universal-apple-darwin
        
        lipo -create \
          artifacts/gruedasm-txd-aarch64-apple-darwin \
          artifacts/gruedasm-txd-x86_64-apple-darwin \
          -output artifacts/gruedasm-txd-universal-apple-darwin
        
        # Verify the universal binaries
        lipo -info artifacts/gruesome-universal-apple-darwin
        lipo -info artifacts/grue-compiler-universal-apple-darwin
        lipo -info artifacts/gruedasm-txd-universal-apple-darwin
        
        # Make them executable
        chmod +x artifacts/gruesome-universal-apple-darwin
        chmod +x artifacts/grue-compiler-universal-apple-darwin
        chmod +x artifacts/gruedasm-txd-universal-apple-darwin
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-binaries
        path: |
          artifacts/gruesome-aarch64-apple-darwin
          artifacts/gruesome-x86_64-apple-darwin
          artifacts/gruesome-universal-apple-darwin
          artifacts/grue-compiler-aarch64-apple-darwin
          artifacts/grue-compiler-x86_64-apple-darwin
          artifacts/grue-compiler-universal-apple-darwin
          artifacts/gruedasm-txd-aarch64-apple-darwin
          artifacts/gruedasm-txd-x86_64-apple-darwin
          artifacts/gruedasm-txd-universal-apple-darwin

  build-windows:
    name: Build Windows binary
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-gnu
    
    - name: Install mingw-w64
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64
    
    - name: Build for Windows
      run: |
        cargo build --release --target x86_64-pc-windows-gnu --bin gruesome
        cargo build --release --target x86_64-pc-windows-gnu --bin grue-compiler
        cargo build --release --target x86_64-pc-windows-gnu --bin gruedasm-txd
        mkdir -p artifacts
        cp target/x86_64-pc-windows-gnu/release/gruesome.exe artifacts/gruesome-x86_64-pc-windows-gnu.exe
        cp target/x86_64-pc-windows-gnu/release/grue-compiler.exe artifacts/grue-compiler-x86_64-pc-windows-gnu.exe
        cp target/x86_64-pc-windows-gnu/release/gruedasm-txd.exe artifacts/gruedasm-txd-x86_64-pc-windows-gnu.exe
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-binaries
        path: |
          artifacts/gruesome-x86_64-pc-windows-gnu.exe
          artifacts/grue-compiler-x86_64-pc-windows-gnu.exe
          artifacts/gruedasm-txd-x86_64-pc-windows-gnu.exe

  create-release:
    name: Create Release
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code for README
      uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare README.txt
      run: |
        cp RUNTIME_README.md artifacts/README.txt
    
    - name: List artifacts
      run: |
        ls -la artifacts/
        ls -la artifacts/macos-binaries/
        ls -la artifacts/windows-binaries/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/macos-binaries/gruesome-aarch64-apple-darwin
          artifacts/macos-binaries/gruesome-x86_64-apple-darwin
          artifacts/macos-binaries/gruesome-universal-apple-darwin
          artifacts/macos-binaries/grue-compiler-aarch64-apple-darwin
          artifacts/macos-binaries/grue-compiler-x86_64-apple-darwin
          artifacts/macos-binaries/grue-compiler-universal-apple-darwin
          artifacts/macos-binaries/gruedasm-txd-aarch64-apple-darwin
          artifacts/macos-binaries/gruedasm-txd-x86_64-apple-darwin
          artifacts/macos-binaries/gruedasm-txd-universal-apple-darwin
          artifacts/windows-binaries/gruesome-x86_64-pc-windows-gnu.exe
          artifacts/windows-binaries/grue-compiler-x86_64-pc-windows-gnu.exe
          artifacts/windows-binaries/gruedasm-txd-x86_64-pc-windows-gnu.exe
          artifacts/README.txt
        draft: true
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-builds:
    name: Test builds on native platforms
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run tests
      run: cargo test --verbose
      env:
        CI: true
    
    - name: Build native binary
      run: cargo build --release --bin gruesome